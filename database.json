{
  "users": [
    {
      "id": 1,
      "name": "Evelyn Patel",
      "email": "evelyn.patel@example.com",
      "cohort": "Bootcamp 2025"
    },
    {
      "id": 2,
      "name": "Liam Chen",
      "email": "liam.chen@example.com",
      "cohort": "Bootcamp 2025"
    },
    {
      "id": 3,
      "name": "Ava Kim",
      "email": "ava.kim@example.com",
      "cohort": "Bootcamp 2024"
    },
    {
      "id": 4,
      "name": "Noah Lee",
      "email": "noah.lee@example.com",
      "cohort": "Bootcamp 2024"
    }
  ],
  "posts": [
    {
      "id": 1,
      "title": "Understanding JavaScript Closures",
      "body": "A closure is a function that has access to its outer scope, even when the outer function has returned. This allows the inner function to use variables from the outer scope, making it a powerful tool for creating private variables and functions. Closures are commonly used in JavaScript for creating modules and encapsulating data.",
      "date": "2025-02-20",
      "userId": 1,
      "topicId": 1
    },
    {
      "id": 3,
      "title": "Solving Common CSS Issues",
      "body": "CSS can be tricky to work with, especially when it comes to layout and positioning. One common issue is vertical centering, which can be achieved using flexbox or CSS Grid. Another issue is dealing with overflow content, which can be solved using the overflow property or by using a library like Masonry.",
      "date": "2025-02-25",
      "userId": 3,
      "topicId": 3
    },
    {
      "id": 4,
      "title": "Advanced JavaScript Concepts",
      "body": "This post covers advanced JavaScript concepts, including prototypes and inheritance. Prototypes are the mechanism by which objects inherit properties from one another. Inheritance is a key concept in object-oriented programming and allows for code reuse and abstraction.",
      "date": "2025-02-27",
      "userId": 1,
      "topicId": 1
    },
    {
      "id": 6,
      "title": "Using CSS Grid for Layout",
      "body": "This post covers the basics of using CSS Grid for layout. CSS Grid is a powerful layout system that allows for two-dimensional layouts. It provides a robust set of features for creating complex layouts, including grid templates, grid areas, and grid items.",
      "date": "2025-03-01",
      "userId": 3,
      "topicId": 3
    },
    {
      "id": 7,
      "title": "JavaScript Best Practices",
      "body": "This post covers best practices for writing clean and maintainable JavaScript code. One key principle is to keep functions short and focused on a single task. Another approach is to use consistent naming conventions and coding style throughout the codebase.",
      "date": "2025-03-02",
      "userId": 1,
      "topicId": 1
    },
    {
      "id": 9,
      "title": "CSS Flexbox Tutorial",
      "body": "This post provides a step-by-step tutorial on using CSS Flexbox. Flexbox provides a simple and powerful way to create flexible layouts. This tutorial covers the basics of using flexbox, including flex containers, flex items, and flex properties.",
      "date": "2025-03-04",
      "userId": 3,
      "topicId": 3
    },
    {
      "id": 10,
      "title": "Mastering JavaScript Async/Await",
      "body": "This post covers the basics of using JavaScript async/await. Async/await provides a simple and powerful way to write asynchronous code that is easier to read and maintain. This post covers the basics of using async/await, including creating and using promises, handling errors, and using async/await with loops and conditionals.",
      "date": "2025-03-05",
      "userId": 1,
      "topicId": 1
    },
    {
      "id": 12,
      "title": "CSS Architecture Best Practices",
      "body": "This post covers best practices for architecting CSS codebases. It covers topics such as organizing CSS files, using preprocessors like Sass or Less, and using CSS methodologies like BEM or OOCSS. It also covers more advanced topics, such as using CSS Grid for layout and using CSS Custom Properties for theming.",
      "date": "2025-03-07",
      "userId": 3,
      "topicId": 3
    }
  ],
  "topics": [
    {
      "id": 1,
      "name": "JavaScript Fundamentals"
    },
    {
      "id": 2,
      "name": "React Development"
    },
    {
      "id": 3,
      "name": "CSS Best Practices"
    }
  ],
  "likes": [
    {
      "id": 3,
      "postId": 3,
      "userId": 4
    },
    {
      "postId": 4,
      "userId": 2,
      "id": 10
    },
    {
      "postId": 12,
      "userId": 2,
      "id": 11
    }
  ],
  "comments": [
    {
      "id": 1,
      "postId": 3,
      "userId": 2,
      "body": "Great post! Thanks for sharing.",
      "date": "2025-03-01"
    },
    {
      "id": 2,
      "postId": 3,
      "userId": 1,
      "body": "I have a question about closures.",
      "date": "2025-03-02"
    }
  ]
}
